클라이언트 이용
서버  제공
-----------------------------------------------------------------------------------------
요청메서드 GET 중요함

GET, POST, PUT, DELETE
요청, 전송, 업데이트, 삭제

-----------------------------------------------------------------------------------------
200 요청 성공

404 요청한 리소스를 불러올 수 없음

500 서버에서 처리 중 오류 발생

3가지를 기억!

-----------------------------------------------------------------------------------------
Connection

keep-alive(연결 유지)
여러 요청을 매번 새로운 연결을 안해도됨

close(연결 종료)
한번연결하고 끝 / 각 요청마다 연결을 닫음

-----------------------------------------------------------------------------------------
HTTP/1.1 200 OK
Date: Tue, 24 Sep 2024 11:00:00 GMT
Content-Type: text/html; charset=UTF-8
Content-Length: 4576
Connection: keep-alive

<html lang="en">
</html>         <- Response Body부분
서버가 요청을 처리한 후 클라이언트에게 반환하는 실제 콘텐츠가 이 부분에 담긴다.

Response Body가 반환한 데이터는
HTML, JSON, XML, Plain Text(단순텍스트데이터),이미지, 동영상으로 받을 수 있다.

★★★★
JSON은 데이터를 저장하고 전송하는 데 사용되는 경량의 데이터 교환 형식
거의 데이터보안은 JSON으로 한다.

JSON은 텍스트로 구성 / 사람이 읽기 쉬움
특정 프로그래밍 언어에 종속되지 않음
키- 값 쌍의 구조로 이루어짐
중괄호 {}로 감싸며, 여러 개의 키-값 쌍을 포함할 수 있다.
자바스크립트 객체는 키에는 ""를 붙이지 않았지만 JSON은 ""를 키에 붙여줌.
{
    "name": "John",
    "age": 30,
    "city": "New York"
}
키는 문자열 값은 다양한 자료형이 될 수 있음
객체,배열,숫자,문자열,boolen, null 같은 자료형을 표현할 수 있고
복잡한 데이터 구조를 직관적 표현이 가능

JSON은 표현이 간결 효율적으로 데이터 전송
대부분의 프로그래밍 언어에서 JSON 지원
사람이 읽고 쓰기 쉬운 구조 디버깅과 유지보수에 유리
-----------------------------------------------------------------------------------------

     App1			    App2
객체 -> JSON       →	JSON -> 객체
직렬화			역직렬화
-----------------------------------------------------------------------------------------

정적 웹 서버 
서버는 해당 HTML파일에 아무 작업도 안하고 파일을 있는 그대로 반환함
그래서 정적 웹 서버라고 부른다.
Apache
Ngin 
위 두개는 성능과 확장성에 강점이 있는 정적 웹 서버

-----------------------------------------------------------------------------------------

동적 웹서버
실시간으로 데이터를 처리하고 응답
맞춤형 페이지나 응답을 제공
서버에서 처리한 후 결과 반환

클라이언트 요청에 따라 실시간 데이터처리

단점
사용자가 많으면 트래픽이 많아지기에 성능에 부담이 갈 수 있음
실시간 처리과정에서 해킹시도를 막기위한 보안관리 중요함

-----------------------------------------------------------------------------------------
서블릿(java+html)
서블릿(Servlet)은 Java 프로그래밍 언어로 작성된 서버 측 컴포넌트로, 
웹 애플리케이션에서 클라이언트의 요청을 처리하고 응답을 생성하는 역할을 합니다.
개발자는 서블릿 엔진을 이용해 서버를 처음부터 구현하지
않고도 각기 다른 비즈니스 로직을 구현하고 배포할 수 있다.

컨테이너
IT에서의 컨테이너는 객체들을 저장해 놓는 공간


서블릿 컨테이너(Servlet Container)는 서블릿을 실행하고 관리하는 서버의 구성 요소
대표적인 서블릿 컨테이너
Apache Tomcat

-----------------------------------------------------------------------------------------
MVC -> Model View Controller