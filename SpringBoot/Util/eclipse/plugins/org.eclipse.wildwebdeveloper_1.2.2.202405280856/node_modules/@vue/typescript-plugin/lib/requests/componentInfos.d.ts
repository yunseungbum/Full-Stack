import * as vue from '@vue/language-core';
import type * as ts from 'typescript';
import type { RequestContext } from './types';
export declare function getComponentProps(this: RequestContext, fileName: string, tag: string, requiredOnly?: boolean): string[] | undefined;
export declare function getComponentEvents(this: {
    typescript: typeof import('typescript');
    languageService: ts.LanguageService;
    language: vue.Language;
    getFileId: (fileName: string) => string;
}, fileName: string, tag: string): string[] | undefined;
export declare function getTemplateContextProps(this: {
    typescript: typeof import('typescript');
    languageService: ts.LanguageService;
    language: vue.Language;
    getFileId: (fileName: string) => string;
}, fileName: string): string[] | undefined;
export declare function getComponentNames(this: {
    typescript: typeof import('typescript');
    languageService: ts.LanguageService;
    language: vue.Language;
    getFileId: (fileName: string) => string;
}, fileName: string): string[] | undefined;
export declare function _getComponentNames(ts: typeof import('typescript'), tsLs: ts.LanguageService, vueCode: vue.VueVirtualCode): string[];
export declare function getElementAttrs(this: {
    typescript: typeof import('typescript');
    languageService: ts.LanguageService;
    language: vue.Language;
    getFileId: (fileName: string) => string;
}, fileName: string, tagName: string): string[] | undefined;
