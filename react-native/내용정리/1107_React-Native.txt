Context API는 Provider와 Consumer 두 개의 컴포넌트를 가지고 있다.

리엑트 네이케이션은 각 기능별로 모듈로 분리되어 있어, 이후에도 사용하는 네비게이션의 종류에 따라 개별적으로 추가 라이브러리를 설치해야한다


react-native-gesture-handler
제스처 기반의 사용자 인터페이스를 만들 수 있도록 해주는 라이브러리
기본적인 터치,스와이프,드래그와 같은 제스처를 인식하고 처리할 수 있다.


react-native-reanimated
애니메이션을 효율적으로 규현할 수 있도록 돕는 라이브러리.
기존의 애니메이션 라이브러리보다 더 부드럽게 구현할 수 있다.

react-native-screens
앱에서 화면 이동과 관련된 자원을 더 효율적으로 관리해서 화면 전환을 더욱 매끄럽게 해주는 라이브러리

react-native-safe-area-context
아이폰x이후 기기의 상단에 노치나 인디케이터 등을 고려해서 레이아웃을 안전하게 조정하는 라이브러리

@react-native-commuity/masked-view
뷰에 마스크(mask)를 씌울 수 있도록 해주는 라이브러리
네비게이션과 함께 사용해서 전환 효과를 더 자연스럽게 만들 때 유용하다.

타이틀 컴포넌트 변경
타이틀에 문자열이 아닌 다른 것을 렌더링 하려면 어떻게 해야할까?
headerTitle 속성에 컴포넌트를 반환하는 함수를 지정하면 타이틀 컴포넌트를 반환하는 컴포넌트로 변경 할 수 있다.


headerMode
-float: 헤더가 상단에 유지되며 하나의 헤더를 사용한다.
-screen: 각 화면마다 헤더를 가지며 화면 변경과 함께 나타나거나 사라진다.
-none: 헤더가 렌더링 되지 않는다.

Navigator의 컴포넌트 속성으로 헤더를 렌더링하는 방법을 설정
headerShown은 화면 옵션으로 , Navigator 컴포넌트의 screenOptions에 설정하면
전체 화면의 헤더가 보이지 않게 설정할 수 있다.

NavigationContainer로 StackNavigation을 자식으로 갖는다.

Stack.Navigator로 Stack.screen 컴포넌트들을 자식으로 갖는다.

각각의 Screen 컴포넌트는 navigation과 route를 props로 받는다

navigation을 통해서 설정을 줄 수 있고, 다른 화면으로 이동이 가능하다.

route.param을 통해서 전달받은 데이터를 사용할 수 있다.

스택 네비게이션을 이용하여 도서 목록 앱 만들기
1.BookMainScreen: 앱의 첫 화면으로,"도서 목록 보기" 버튼이 있어야 한다.
버튼을 누르면 BookListScreen으로 이동한다.

2.BookListScreen : 여러 책의 목록을 표시하며, 각 책을 클릭하면 해당 책의 상세 정보를 보여주는
BookListScreen으로 이동한다. 책 제목,상세보기

const book = [

]

3.BookDetailScreen: 선택된 책의 제목과 설명을 표시한다.














































































































