상속의 의의
부모클래스 -> 넓은 범위의 범주(ex:차)

자식 클래스-> 좁은 범위의 범주(ex:버스,트럭,승용차)

상속의 특징
1. 다중상속을 받는게 불가능하다.
2. 최상위 클래스는 Object다
2. 하나의 부모클래스는 여러 자식클래스를 갖는 것은 가능하다.

오버라이딩
1. 부모클래스의 매서드를 재정의 하는 것
2. 반환형,메서드명,매개변수를 그대로 써야한다.
3, 내용만 재정의 해야한다.
4. 범위는 넓게 사용가능

super
부모클래스를 지칭하는 키워드
super.필드 -> 부모의 필드 호출 가능
super.메서드명() -> 부모의 메서드 호출
super() -> 부모의 생성자 호출

자식클래스의 객체가 만들어질 때 부모클래스의 멤버를 사용할 수 있는 이유
- 자식 생성자 안에서 부모생성자(super())가 호출 되기 때문이다.

접근제한자
public: 제한없이 접근 가능
protected: 같은 패키지에서 접근가능, 다른 패키지라도 자식 클래스면 접근 가능(super로만 접근 가능)
default: 안쓰면 default, 같은 패키지 내에서만 접근이 가능하다.
private: 같은 클래스 내에서만 접근이 가능하다.

2차 상속(N차 상속)
ex) Car -> OpenCar -> SportCar-> superCar
          ->  Bus -> SchoolBus

final 클래스
상속이 불가능한 마지막 클래스이다.

final메서드
사용은 할 수 있으나,오버라이딩 불가능함

final 생성자는 없음

타입변환 

자동타입변환
자식타입 -> 부모타입
자식클래스에 따로 추가해놨던 필드와 메서드를 사용할 수 없다.
부모클래스에 있는 것만 사용할 수 있는데 예외로 오버라이딩 된 메서드는 사용할 수 있다.(= 자식 클래스에 재정의 된 것을 사용할 수 있다.)

동적바인딩 -> 프로그램이 실행 될 때 객체의 실제타입에 따라 어떤 메서드가 실행되는지 결정된다. 

강제타입변환




