SPA
한번 웹 페이지를 로딩하면 유저가 새로고침을 하지 않는 이상 페이지를 새로 로딩하지 않는다

CSR
자바스크립트가 동적으로 HTML을 재구성해 만드는 클라이언트 렌더링 방식


material-ui
리엑트 개발에서 쉽게 사용할 수 있는 ui  프레임 워크이다.
미리 만들어놓은 컴포넌트나 css를 사용할 수 있다.

emotion
js로 css 스타일을 작성할 수 있도록 설계된 라이브러리

렌더링의 원리

1.html코드를 파싱한다. dom 트리로 만든다.
2. image,css,script등 다운로드해야하는 리소스를 다운로드한다.
3. css도 cssom트리로 변환한다.
4.다운로드한 자바스크립트를 인터프리트, 컴파일, 파싱, 실행한다.
5.파싱을 마친후 브라우저는 렌더링에 들어간다.

spa
서버에서 다시 요청하지 않고 자바스크립트가 동적으로 html을 재구성해서 만드는 앱

csr(client side rendering)
- 서버에서 최소한의 html을 받고, 내부에 위치한 script태그로 js를 받아서
클라이언트에서 페이지를 렌더링 하는 방식
- react, vue, angular

장점
- 초기렌더링 이후에 진행되는 렌터링의 속도가 매우 빠름

단점
- 초기 구동에 필요한 파일을 전부 받아야해서 초기 페이지 구동 속도가 느림

SSR(server side rendering)
- 서버에서 사전에 렌더링된 파일을 클라이언트에게 전송하고
클라이언트는 이를 즉시 렌더링하는 방식
- 단 js의 경우 정적 리소스(html,css)가 렌더링 된 후 적용되기 때문에 js가 모두 
적용되기 전에는 조작이 불가능함

1. 사용자가 웹페이지를 방문할 경우, 서버는 이를 확인하고 브라우저에게 제공할
html컨텐츠를 컴파일 한다.
2. 컴파일된 html은 브라우저에 제공되며, 브라우저는 이를 다운로드하고 렌더링
하여 사용자가 이를 볼 수 있도록 한다.
3. 이후 JS파일을 다운로드 받은 후 실행하여 사용자와 페이지 간의
상호작용을 가능하게 함
4. 사용자가 다른 페이지로 이동할 경우, 1~3번 과정을 반복한다

- jsp, thymeleaf

reactDOM
- react는 순수 자바 스크립트고 자바스크립트를 이용해 컴포넌트를
만들어나간다.
- 실제로 브라우저가 이해할 수 있는 건 html,js,css뿐임
- jsx 문법으로 작성된 코드를 babel라이브러리가 순수 자바 스크립트로 변환하고
우리가 만든 컴포넌트를, html과 연결하는 작업을 해주는 라이브러리가 reactdom이다

정리
1. 브라우저가 어떻게 작동하는지
2. node설치 -> npm,npx를 이요하여 react프로젝트 생성
3. 애플리케이션 실행
4. react가 SPA로 어떻게 작동하는지
5. JSX가 뭔지 알아봄

--------------------------------------------------------------------------------------------------

프론트엔드 서비스 개발
학습내용
컴포넌트
Hook
Props
이벤트 핸들러

실습내용
App/Todo/AppTodo 컴포넌트 개발
Material-ui를 이용한 ui 개발
핸들러를 이용한 Todo 기능 개발

Props와 Hook
Props:	부모 컴포넌트가 자식 컴포넌트에게 전달하는 값,props는 객체이고 뭔가를 넘겨 받을 때 
	자식컴포넌트에선 'props.이름'으로 접근할 수 있다.
	단반향성

Hook:	이렉트 16.8에 새로 도입된 기능으로 함수형 컴포넌트에서 사용되는 몇가지 기술


Todo 컴포넌트를 하나 더 추가하고 item을 하나 더 만들어서 넘기기
id:"1"
title:"Hello wrold2"
done: false





































































