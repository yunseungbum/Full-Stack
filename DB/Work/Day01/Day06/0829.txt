CASE문
CASE WHEN THEN ELSE END 어떠한 조건에 맞춰 값을 출력해주는 문법
CASE WHEN 조건식 THEN '참 값' ELSE '거짓 값' END

PL/SQL
-오라클에서 지원하는 프로그래밍 언어의 특성을 수용하여 SQL에서는 
사용할 수 벗는 절차적 -프로그래밍 기능을 가지고 있어 SQL의 단점을 보완하였다.

PL/SQL문을 사용하는 이유
대용량 데이터를 연산해야 할 때, WAS등의 서버로 전송해서 처리하려면 네트워크에 부하가 많이 걸린다.
이때 프로시저나 함수를 사용하여 데이터를 연산하고 가공한 후에 , 최종 결과만 서버에 전송하면
부담을 많이 줄일 수 있다.
로직을 수정하기 위해 서버를 껐다 켜지 않아도 된다. 서버에서는 단순히 DB에 프로시저를 호출하여 사용하면 된다.
쿼리문을 직접 노출하지 않는 만큼, SQL injection의 위험성이 줄어든다.

PL/SQL의 기본구조
DECLARE(선언부) PL/SQL문에서 사용하는 모든 변수나 상수를 선언하는 부분

IS 

BEGIN(실행부) 절차적으로 SQL문을 실행할 수 있도록 절차적인 언어의 요소인 제어문, 반복문 함수의 정의 등 로직을 기술할 수 있는 부분
  쿼리문을 작성할 수 있다.
END;(실행문종료)


PL/SQL문의 종류
프로시저 : 리턴 값을 하나 이상 가질 수 있는 프로그램
함수 : 리턴 값을 반드시 반환해야 하는 프로그램
패키지 : 하나 이상의 프로시저, 함수, 변수 등의 묶음
트리거 : 지정된 이벤트가 발생하면 자동으로 실행되는 PL/SQL블록


IF문
IF 조건 THEN 실행문;
END IF;
IF 조건 THEN 실행문;
ELSE 실행문;
END IF;
IF 조건 THEN 실행문;
ELSIF 조건문 THEN 실행문;
ELS 실행문;
END IF;


반복문
1. FOOR LOOP문
FOR index in [REVERSE] 시작값 .. END값 LOOP
	STATEMENT 1    
	STATEMENT 2    
	...
END LOOP;

2. WHILE문

WHILE(조건)
LOOP
명령;
END LOOP;

프로시저(PROCEDURE)
PL/SQL의 대표적인 부 프로그램에 프로시저가 있다.
데이터베이스에 대한 일련의 작업을 정리한 절차를 RDBMS에 저장한 것으로 영구 저장 모듈이라고도 합니다.
일련의 쿼리를 마치 하나의 함수처럼 실행하기 위한 쿼리의 집합입니다.
거의 함수와 비슷하다.

장점
하나의 요청으로 여러 SQL문을 실행시킬 수 있습니다.
네트워크 소요 시간을 줄여 성능을 개선할 수 있습니다.
기능변경이 편하다.

단점
문자나 숫자 연산에 사용하면 오히려 C,JAVA보다 느린 성능을 볼 수 있다.
유지보수가 쉽지 않다.

함수
하나의 특별한 목적의 작업을 수행하디 위해 독립적으로 설계된 코드의 집합
-반환값이 무조건 있어야한다.
-쿼리문 내에서 사용하는 것이 가능하다.

-클라이언트(화면)에서 값을 건네받고 서버에서 필요한 값을 가져와서 클라이언트에서 작업을 하고 반환
-프로시저보다는 속도가 느리다.

CREATE OR REPLACE PROCEDURE 프로시저명(
매개변수 IN 데이터타입 := 값,
매개변수 IN 데이터타입&TYPE
);

프로시저와 SQL
프로시저와 DML 접목하기

JOBS테이블에 데이터를 INSERT해주는 프로시저 만들기



















































