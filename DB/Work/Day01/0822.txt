DB(DataBase)
-구조화된 정보, 데이터의 조직화된 모음, 일반적으로 컴퓨터에 
 전자적으로 저장이 되고 데이터베이스관리시스템에 의해 제어된다.


DBMS(DataBaseManagementSystem)
-데이터베이스와 사용자 또는 프로그램 간의 
 매개체 역할을 하여 사용자가 정보의 구성,검색,수정,삭제와 같은 관리를 할 수 있게 해줍니다.



DBMS의 종류
1.계층형 데이터베이스(HDBMS)
-폴더와 파일 등의 계층 구조로 데이터를 저장하는 방식
-데이터의 관계를 트리 구조로 정의, 부모-자식 형태를 가짐
-하드디스크,DVD파일 시스템 등
-데이터 액세스 속도가 빠름
-데이터의 사용량 쉽게 예측
-상하 종속적인 관계로 구성되어 초기 세팅 후 프로세스 수용이 어려움

2.네트워크형 데이터베이스(NDBMS)
-데이터 구조를 네트워크상의 노드 형태로 논리적이게 표현한 데이터 모델, 각각의 노드를 서로 대등한 관계로 구성한 시스템
-계층형 데이터베이스의 데이터 중복 문제 해결, 상하 종속적 관계 해결
-추후 변경시 복잡한 구조로 인해 변경이 어려움
-데이터 종속성을 해결하지 못함

3.관계형 데이터베이스(RDBMS)
-행(Column)과 열(Rows)을 가지는 표 형식 데이터를 저장하는 형태의 데이터베이스


데이터베이스 접속하기
sqlplus

계정명/비밀번호 입력하고 로그인하기

계정언락하기(잠금풀기)
Alter user 계정명 account unlock;


계정 비밀번호 설정하기
alter user 계정명 identified by 새비밀번호;

ojdbc11.jar
-데이터베이스와 통신을 담당하는 인터페이스
-Oracle Java DataBase Connectivity의 약자
-Oracle 전용의 jdbc 라이브러리이다.
-Oracle에서 제공하는 오라클DB를 관리할 수 있도록 해주는 JDBC
-MS SQL, MySQL등과 같은 데이터베이스에 알맞은 JDBC 드라이버를 구현하여 제공
-JDBC 드라이버의 구현체를 이용해서 특정 벤더의 데이터베이스에 접근할 수 있다.


JDBC
-JDBC(Java Database Connectivity)는 Java 기반 애플리케이션의 데이터를 데이터베이스에 저장 및 업데이트하거나,
-데이터베이스에 저장된 데이터를 Java에서 사용할 수 있도록 하는 자바 API이다.
-Java 애플리케이션에서 데이터베이스에 접근하기 위해 JDBC API를 사용하여 데이터베이스에 연동할 수 있으며,
 데이터베이스에서 자료를 쿼리(Query)(조회)하거나 업데이트하는 방법을 제공한다.
-JDBC API는 java.sql.* 패키지에 의해 구현됩니다.



스키마
1.스키마는 데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 메타데이터의 집합이다.
2.스키마는 데이터베이스를 구성하는 데이터 개체(Entity), 속성(Attribute), 관계(Relationship) 및 데이터 조작 시 데이터 값들이 갖는 제약 조건 등에 관해 전반적으로 정의한다.
3.스키마는 사용자의 관점에 따라 외부 스키마, 개념 스키마, 내부 스키마로 나눠진다.


스키마의 종류

1.개념스키마 : 전체적인 뷰
-조직체 전체를 관장하는 입장에서 DB를 정의한 것
-관계, 제약조건, 접근권한, 보안정책, 무결성 규칙에 관한 사항을 포함하고 있다.
-따라서 개념스키마를 '스키마'라고 칭하기도 하며, DB전체를 기술한것이기 때문에 한 개밖에 존재할 수 없다.


2.내부스키마 : 물리적인 저장장치 입장에서 DB가 저장되는 방법을 기술한 것
-구체적인 개념으로 스키마를 디스크 기억장치에 물리적으로 구현하기 위한 방법을 기술한 것
-데이터베이스의 물리적 저장구조를 정의
-디스크에 어떤 구조로 저장할 것인가
-데이터의 실제 저장방법을 기술
-물리적인 저장장치와 밀접한 계층
-시스템 프로그래머나 시스템 설계자가 보는 관점의 스키마


3.외부스키마 : 사용자 뷰
-사용자나 응용 프로그래머가 개인의 입장에서 필요한 데이터베이스의 논리적 구조를 정의
-실세계에 존재하는 데이터들을 어떤 형식, 구조, 배치 화면을 통해 사용자에게 보여줄 것인가
-전체 데이터베이스의 한 논리적 부분 -> 서브 스키마
-하나의 데이터베이스에는 여러 개의 외부 스키마가 존재할 수 있다.
-예를들어 '운전면허시험'에 대한 전반적인 정보를 얻고자 할 때, 누구는 '운전면허시험'이라고 검색하고, 누구는 '운전면허증', 누군가는 '운전면허필기시험'이라고 검색할 것이다.
-이것이 외부 스키마는 여러개 존재할 수 있다는 의미이다.
-응용 프로그래머는 C,JAVA등의 언어를 이용해서 DB에 접근한다.



SQL문
-구조화된 질의언어(Structured Query Language)의 약자로 DBMS 상에서 데이터를 읽고 쓰고 삭제하는 등 데이터를 관리하기 위한 일종의 프로그램 언어이다.
-C나 Java같은 일반 프로그래밍 언어는 절차적 언어라고 할 수 있는데 반해 SQL은 집합적 언어이다.
-집합적 언어는 데이터를 특정 집합 단위로 분류해 이 단위별로 한 번에 처리하는 언어이다.
-RDBMS의 표준 언어로 SQL을 채택했고, 표준 SQL문만 학습하면 오라클은 물론 MSSQL, DB2등 여러 DBMS에서 동일하게 사용할 수 있다는 뜻이다. 물론 DBMS별로 독특한 기능이 있지만, 다른 프로그래밍 언어에 비해 그 차이는 미미하다.
-SQL문장은 대소문자를 구별하지 않는다.
-한줄 또는 여러줄에 걸쳐 입력하는 것이 가능
-SQL문장의 끝은 세미콜론(;)으로 맺어야 한다.


SQL문장의 종류
DDL(Data Definition Language) : 데이터 정의어
-데이터베이스 객체를 관리하는 언어이다.

DML(Data Manipulation Language) : 데이터 조작어
-데이터 삽입, 조회,삭제, 갱신 등 실제로 데이터를 조작하는 언어이다.
-개발자 입장에서 가장 많이 사용하는 SQL이다.

DCL(Data Controll Language) : 데이터 제어어
-grant, revoke등의 키워드를 가지는 문장

TCL(Transaction Controll Language) : 트랜잭션 제어어
-commit, rollback, savepoint


DDL(Data Definition Language) : 데이터 정의어
데이터베이스 객체를 생성, 삭제, 변경하는 언어이다.
CREATE : 테이블이나 인덱스, 뷰 등 데이터베이스 객체를 생성한다.
DROP : 생성된 데이터베이스 객체를 영구히 삭제
ALTER : 이미 생성된 데이터 베이스 객체를 수정
TRUNCATE : 테이블의 데이터를 통째로 삭제

개발 현장에서의 DDL의 사용


테이블
-행과 열로 이루어진 데이터의 집합을 테이블이라고 한다. 엑셀을 켜고 보는 모양과 매우 흡사하다.
-일반적인 데이터베이스에서는 행과 열만 있으면 테이블이라고 하지만, 관계형데이터베이스에서는 특별한 제약을 추가해서 릴레이션(relation)이라고 부른다.



행(row)
-테이블을 구성하는 데이터들 중 가로로 묶은 데이터셋을 의미한다. 일반적으로 한 명에 대한 정보를 가지고 있다.
-이 또한 관계형 데이터베이스에서는 튜플(tuple), 또는 레코드(record)라는 이름으로 불린다.
-행의 수를 기수(Cardinality) 라고 한다.



열(column)
-테이블을 구성하는 데이터들 중 세로로 묶은 데이터넷을 의미한다. 일반적으로 열은 그 테이블의 속성을 의미한다.
-열을 구성하는 값들은 같은 도메인(domain)으로 되어있다. 이 또한 관계형 데이터베이스에서는 속성(attribute)라는 이름으로 불린다.
-열의 수를 차수(Degree)라고 한다.




도메인(domain)
-하나의 속성이 취할 수 있는 동일한 유형의 데이터 집합을 의미한다.
-예를들어 성별을 저장하기로 했으면 남,여에 대한 데이터만 들어올 수 있다.


자료형(데이터타입)
-데이터 타입이란 컬럼이 저장되는 데이터의 유형을 말하며, 오라클에서는 기본으로 제공되는 기본 데이터 타입이 있다.



문자 데이터 타입
문자나 문자열 데이터는 문자형 데이터에 속하며, 오라클에서 제공하는 문자형은 다음과 같다.

데이터타입		특징
CHAR(n)			고정길이 문자 / 최대 2000byte / 디폴트 값은 1byte
VARCHAR2(n)		가변길이 문자 / 최대 4000BYTE / 디폴트 값은 1byte
NCHAR(n)		고정길이 유니코드 문자(다국어 입력가능) / 최대 2000byte / 디폴트 값은 1byte
NVARCHAR(n)		가변길이 유니코드 문자(다국어 입력가능) / 최대 2000byte / 디폴트 값은 1byte

-가변길이라 함은 실제 입력된 데이터 길이에 따라 크기가 변해 정해지는 것을 말한다.
-예를들어 VARCHAR2(10)으로 선언하면, 10byte까지 데이터를 입력할 수 있지만, 'bac'라는 세글자만 들어왔을 때 실제 길이는 3byte가 된다.
-공간효율적인 측면에서 VARCHAR2를 사용하는 것이 좋다.
-영어는 글자당 1byte, 한글은 2byte이다.



숫자 데이터 타입
대부분 NUMBER형을 사용한다
.
데이터타입		특징
NUMBER(P,S)		가변숫자 / P (1 ~ 38, 디폴트 : 38) / S (-84 ~ 127, 디폴트 값 : 0) / 최대 22byte
FLOAT(P)		NUMBER의 하위타입 / P (1~128 .디폴트 : 128) / 이진수 기준 / 최대 22byte
BINARY_FLOAT		32비트 부동소수점 수 / 최대 4byte
BINARY_DOUBLE		64비트 부동소수점 수 / 최대 8byte


-숫자타입은 4가지가 있긴 하지만 NUMBER형만 사용할 때가 많다.
-NUMBER(5)는 12345를 나타낼수 있다.
-NUMBER(5,2)는 123.45를 나타낼 수 있다.
-다른 DBMS는 INTEGER와 같은 정수형, DECIMAL과 같은 실수형을 제공한다.
-오라클도 이런 타입으로 작성하는 것이 가능하지만 내부에서는 모두 NUMBER로 변환되어 생성된다.



날짜 데이터 타입
데이터타입		특징
DATE			BC 4712년 1월 1일부터 9999년 12월 31일, 연, 월, 일, 시, 분, 초 까지 입력 가능
TIMESTAMP		연도, 월, 일, 시, 분, 초 + 밀리초까지 입력가능




LOB데이터 타입
LOB은 'Large OBject'의 약자로 대용량 데이터를 저장할 수 있는 데이터 타입이다.

데이터 타입	설명
CLOB		문자형 대용량 객체, 고정길이와 가변길이 문자 집합 지원, 최대 크기는 (4GB)
NCLOB		유니코드(다국어)를 포함한 문자형 대용량 객체, 최대 크기는 (4GB)
BLOB		이진형 대용량 객체, 최대 크기는(4GB)
BFILE		대용량 이진 파일에 대한 로케이터(위치,이름)저장 최대 크기는(4GB)




제약조건
-제약조건이란, 테이블에 문제가 되는 결함이 있는 데이터가 입력되지 않도록 미리 지정해둔 조건입니다.
-제약조건은 테이블을 생성할 때 함께 설정할 수 있고, 추후에 생성하거나 변경할 수 도 있습니다.



NOT NULL
컬럼명 데이터타입 NOT NULL;

-컬럼을 정의할 때 NOT NULL 제약조건을 명시하면 해당 컬럼에는 반드시 데이터를 입력해야 한다.
-즉 반드시 값이 들어 있어야 하는 컬럼에는 NOT NULL제약조건을 만들어 사용한다.



UNIQE
컬럼명 데이터타입 UNIQUE;
또는
CONSTRAINTS 제약조건명 UNIQUE(컬럼명,...);

-해당 컬럼에 들어가는 값이 유일해야 한다는 의미이다.
-즉, 중복되는 값을 허용하지 않는다.
-NOT NULL을 같이 명시하면 해당 컬럼에 들어오는 값은 유일함은 물론 반드시 입력해야 한다.



PRIMARY KEY(기본키)
-보통 테이블에 키를 생성했다라고 할 때, 이는 기본키를 의미한다.
-기본키는 UNIQUE와 NOT NULL 속성을 동시에 가진 제약조건으로, 테이블 당 1개의 기본키만 생성할 수 있다.

컬럼명 데이터타입 PRIMARY KEY;
또는
CONSTRAINTS 제약조건명 PRIMARY KEY(컬럼명,...);



FOREIGN KEY(외래키)
CONSTRAINT 외래키명 FOREIGN KEY(컬럼명, ...)
REFERENCES 참조 테이블(참조 테이블 컬럼명, ...);

-부서의 정보는 부서테이블에 저장이 되어있고, 사원 테이블에는 부서번호만 저장을 했을때 신입사원이 입사했을 때 잘못된 부서번호를 입력하는 오류를 범할 수 있다.
-외래키를 설정해놓으면 부서정보에 없는 부서번호를 입력하려고 할 때 오라클은 오류를 발생시켜 잘못된 데이터가 입력되는 것을 방지한다.
-삭제에서도 마찬가지이다. 사원이 있는 부서가 있을 때는 부서의 정보를 삭제할 수 없다.



CHECK
컬럼에 입력되는 데이터를 체크해 특정 조건에 맞는 데이터만 입력받고 그렇지 않으면 오류를 낸다.
CONSTRAINT 체크명 CHECK(체크조건);


DEFAULT
컬럼명 자료형 DEFAULT 값
아무것도 입력하지 않으면 설정한 기본값이 입력됨
값이 입력되면 기본값은 무시된다.





















































