NOT NULL과 DEFAILT의 차이점

EX)GENDER CHAR(1) DEFAULT 'W' NOT NULL
/*QUERY1*/
INSERT INTO TBL_STUDENT GENDER VALUES(NULL);

/*QUERY2*/
INSERT INTO TBL_STUDENT GENDER VALUES();


쿼리1은 'NULL'이라는 특정한 값을 받았다고 생각하기 때문에
DEFAULT값이 안들어간다.
쿼리2는 아무런 입력도 받지 않았다고 생각하기 때문에 DEFUALT값인 'W'가 설정된다.


1.NOT NULL만 선언한 경우
-쿼리1의 경우: NOT NULL이 동작을 한다.
-쿼리2의 경우: NOT NULL이 동작을 한다.

2.두개 다 선언한 경우
-쿼리1: DEFAULT가 동작하여 기본값이 들어감
-쿼리2: NOT NULL이 동작하여 오류남



무결성
-데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제값이 일치하는지 정확성을 의미한다.
-무결성 제약조건은 DB에 들어있는 데이터의 정확성을 보장하기 위해 부정확한 자료가 DB내에 저장되는 것을 방지하기 위한 제약조건을 말한다.
-데이터의 정확성, 일관성, 유효성이 유지되는 것, 일관된 데이터베이스 상태를 정의하는 규칙을 묵시적으로 또는 명시적으로 정의함
 정확성 : 중복이나 누락이 없는 형태
 일관성 : 원인과 결과의 의미가 연속적으로 보장되어 변하지 않는 상태
 유효성 : 사용자로부터 값을 입력받을 때 정확한 값만 입력되도록 할 때 유효한 기능이다.

1.개체 무결성
-PK로 선택된 컬럼은 고유한 값을 가져야 하며, 빈 값, NULL값은 허용하지 않는다.


2.참조 무결성
-외래키 값은 Null 이거나 참조 테이블의 기본키 값과 동일해야 한다.
-즉, 테이블은 참조할 수 없는 외래키 값을 가질 수 없다는 규정이다.
-<수강> 테이블의 '학번' 속성에는 <학생> 테이블의 '학번'속성에 없는 값은 입력할 수 없다.


3.도메인 무결성
-주어진 속성의 값들이 도메인에 속한 값이어야 한다는 규정이다.
-<수강> 이라는 테이블에 '과목명'이라는 속성에 영어,수학, 국어 세 가지만 입력되도록 유효한 값을 가지는 경우
-반드시 해당 값만 입력을 해야 한다.


4.사용자 정의 무결성
속성 값들이 사용자가 정의한 제약 조건에 만족해야 한다는 규정이다.


모델링
-데이터 모델링이란 정보시스템 구축의 대상이 되는 업무 내용을 분석하여 이해하고 약속된 표기법에 의해 표현하는걸 의미한다.
-분석된 모델을 가지고 실제 데이터베이스를 생성하여 개발 및 데이터 관리에 사용된다.
-특히 데이터를 추상화한 데이터 모델은 데이터베이스의 골격을 이해하고 그 이해를 바탕으로 SQL문장을 기능과 성능적인 측면에서 효율적으로 작성할 수 있기 때문에,
-데이터 모델링은 데이터베이스 설계의 핵심 과정이기도 하다.


데이터 모델링의 특징
-추상화 : 현실세계를 일정한 형식에 맞춰 간략하게 표현해야 합니다.
-단순화 : 누구나 쉽게 이해할 수 있도록 제한된 표기법이나 언어를 사용해야 합니다.
-명확화 : 명확하게 의미가 해석되어야 하고, 한 가지 의미만을 가져야 합니다.

1. 요구사항 분석
-업무 파악은 어떠한 업무를 시작하기 전에 해당하는 업무에 대해서 파악하는 단계 이다.
-고객과의 의사소통을 통해 고객의 업무 프로세스를 완벽하게 이해하고, 그들의 요구사항을 구체적으로 뽑아내는 과정

2. 개념적 데이터 모델링
-내가 하고자 하는 일의 데이터 간의 관계를 구상하는 단계 이다.
-각 개체들과 그들간의 관계를 발견하고 표현하기 위해 ERD 다이어그램을 생성한다.
-피터 첸 표기법(Peter Chen Notation)으로 ERD 다이어그램을 구성한 그림이다.
-그리는 방법은 어렵지 않다. 도형이 의미하는 바를 알고 화살표를 통해 관계를 표현하기만 하면 된다.
-회원, 주문, 상품 3가지를 관리하고자 한다.

3. 논리적 데이터 모델링
-개념적인 데이터 모델이 완성되면, 구체화된 업무 중심의 데이터 모델을 만들어 내야한다.
-업무에 대한 Key, 속성, 관계등을 표시하며, 정규화 활동을 수행한다.
-정규화는 데이터 모델의 일관성을 확보하고 중복을 제거하여 신뢰성있는 데이터 구조를 얻는데 목적이 있다.


조합키
-두 개 이상의 컬럼이 하나의 기본키로 작동하기 때문에 두개가 완전히 일치하는 데이터가 올 수 없다.
-조합치 만드는 법
CREATE TABLE TEST(
	Col1 varchar2(30),
	Col2 number,
	CONSTRAINT TEST_PF PRIMARY KEY(Col1.Col2)
)


4. 물리적 데이터 모델링
-최종적으로 데이터를 관리할 데이터 베이스를 선택하고, 선택한 데이터 베이스에 실제 테이블을 만드는 작업을 말한다.
-시각적인 구조를 만들었으면 그것을 실제로 SQL 코딩을 통해 완성하는 단계라고 보면 된다


USER      
U_ID(PK)   VARCHAR2(100)
U_PW       VARCHAR2(100)
U_NAME     VARCHAR2(200)
U_ADDRESS  VARCHAR2(300)
U_EMAIL    VARCHAR2(300)   
U_BIRTH	   DATE
--------------
ORDER      
O_NUM      NUMBER
O_DATE     DATE 
U_ID(FK)   VARCHAR2(100)   
P_NUM(FK)  NUMBER
--------------
PRODUCT   
P_NUM(PK)   NUMBER
P_NAME      VARCHAR2(100)
P_PRICE     NUMBER
P_COUNT	    NUMBER


관계
1:1관계
어느 한쪽의 테이블에서 상대 테이블과 반드시 단 하나의 관계를 가지는 것

국민
주민등록번호(PK)
이름

여권정보
여권번호
주민등록번호


1:N(1대 다 관계)
한 쪽 테이블이 관계를 맺은 쪽의 테이블에 여러 객체를 가질 수 있는 것
한명의 유저가 여러개의 물건을 주문 할 수 있다.

N:M(다 대 다 관계)
관계를 맺고 있는 양쪽의 테이블 모두가 1:N 관계를 가지는 것


-------------------------------------------------------------

DML(Data Manipulation Language) : 데이터 조작어

SELECT: 데이터의 조회
  EX) SELECT 컬럼명1,컬럼명2... FROM 테이블명;

  EX)SELECT 컬럼명1,컬럼명2... FROM 테이블명
     WHERE 조건식;

조건절(WHERE 절)
-원하는 자료를 검색하기 위한 조건절
-WHERE 절에서는 결과를 제한하기 위한 조건을 기술할 수 도 있다.
-WHERE절은 조회하려는 데이터에 특정 조건을 부여할 목적으로 사용하기 때문에 FROM절 뒤에 오게 된다.

WHERE 절의 조건식은 아래 내용으로 구성된다.
컬럼명이 왼쪽에 온다.
비교 연산자 ( 초과,미만,이상,이하,같다,같지않다,그리고And,또는Or)
> , < : 초과, 미만
>=, <= : 이상, 이하
= : 같다
< >, !=, ^= : 같지않다.
AND : 두 조건식이 모두 참이면 참
OR : 둘 중 하나라도 참이면 참
문자,숫자,표현식(보통 조건식의 우측에 위치)
비교 칼럼명(JOIN 사용시)


조건식에서 NULL 사용하기
컬럼명 IS NULL : 컬럼 값이 NULL이면 참
컬럼명 IS NOT NULL : 컬럼 값이 NULL이 아니면 참



INSERT : 데이터의 추가
UPDATE : 데이터의 수정
DELETE : 데이터의 삭제


SQL연산자
BETWEEN : A와 B사이의 값을 조회할 때 사용
IN : OR을 대신해서 사용하는 연산자
LIKE : 유사검색












































